The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------


First import ``matrix_divided`` from the ``2-matrix_divided.py`` file:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:

>>> matrix_divided([[1, 2], [3, 4]], div=2)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided([[9, 3], [6, 12]], div=3)
[[3.0, 1.0], [2.0, 4.0]]

>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], div=0.5)
[[3.0, 5.0], [7.0, 9.0]]

Test - matrix is not a list
>>> matrix_divided("not a matrix", div=2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test - row is not a list
>>> matrix_divided([1, 2, 3], div=2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test - element not int/float
>>> matrix_divided([[1, "oops"], [3, 4]], div=2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test - rows of different sizes
>>> matrix_divided([[1, 2], [3, 4, 5]], div=2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Test - div is not a number
>>> matrix_divided([[1, 2], [3, 4]], div="yep")
Traceback (most recent call last):
...
TypeError: div must be a number

Test - div is zero
>>> matrix_divided([[1, 2], [3, 4]], div=0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero